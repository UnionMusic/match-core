name: 'Build Test'
on:
  pull_request:
    paths:
      - '.github/workflows/build-test.yml'
      - '**.rs'
      - 'Cargo.lock'
      - 'Cargo.toml'
  push:
    branches:
      - main
      - releases/*
    paths:
      - '.github/workflows/build-test.yml'
      - '**.rs'
      - 'Cargo.lock'
      - 'Cargo.toml'

env:
  TENCENTCLOUD_SECRET_ID: ${{ secrets.TENCENTCLOUD_SECRET_ID }}
  TENCENTCLOUD_SECRET_KEY: ${{ secrets.TENCENTCLOUD_SECRET_KEY}}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  SENTRY_ENVIRONMENT: "testing"
  RUST_LOG: info
  RUST_BACKTRACE: 1

jobs:
  fmt:
    name: 'Formatting'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: hecrj/setup-rust-action@v1
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check

  clippy_check:
    name: 'Clippy Check'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy
          override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  check:
    name: 'Check'
    runs-on: ubuntu-latest
    needs: [ fmt, clippy_check ]
    strategy:
      matrix:
        rust: [ stable ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: ${{ github.head_ref }}

      - name: Setup Rust ${{ matrix.rust }}
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}

      - uses: Swatinem/rust-cache@v1

      - run: cargo check --verbose --workspace --all-features

  bench:
    name: 'Benchmark'
    runs-on: ubuntu-latest
    needs: [ check ]
    strategy:
      matrix:
        rust: [ stable ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: ${{ github.head_ref }}

      - name: Setup Rust ${{ matrix.rust }}
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}

      - uses: Swatinem/rust-cache@v1

      - run: cargo bench --verbose --workspace --all-features

  build:
    name: 'Build'
    runs-on: ubuntu-latest
    needs: [ bench, tests ]
    strategy:
      matrix:
        rust: [ stable ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: ${{ github.head_ref }}

      - name: Setup Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}

      - uses: Swatinem/rust-cache@v1

      - run: cargo build --release

  tests:
    name: 'Tests'
    runs-on: ubuntu-latest
    needs: [ check ]
    strategy:
      matrix:
        rust: [ stable ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: ${{ github.head_ref }}

      - name: Setup Rust ${{ matrix.rust }}
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}

      - uses: Swatinem/rust-cache@v1

      - run: cargo test --verbose --workspace --all-features